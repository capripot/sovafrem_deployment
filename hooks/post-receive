#!/usr/local/bin/ruby

# Hook by Capripot 2015-2021
#
# NOTE env -i to setup environments variables for Git

HOOK_WORK_TREE = {
  :staging => "#{ENV['HOME']}/marctanguy/staging.sovafrem.com",
  :mobile => "#{ENV['HOME']}/marctanguy/7.sovafrem.com",
  :master => "#{ENV['HOME']}/www"
}

# HOOK_GIT_DIR = "#{ENV['HOME']}/marctanguy/staging.sovafrem.com/.git"
PHP_EXEC = "/usr/local/php5.6/bin/php -c /usr/local/php5.6/etc/php.ini"
COMPOSER_EXEC = "#{PHP_EXEC} #{ENV['HOME']}/opt/bin/composer.phar"
RUCKUS_VENDOR_EXEC = "#{PHP_EXEC} vendor/ruckusing/ruckusing-migrations/ruckus.php"
ARTISAN_EXEC = "#{PHP_EXEC} artisan"

# for coloring the terminal output
class String
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def red
    colorize(31)
  end

  def green
    colorize(32)
  end

  def yellow
    colorize(33)
  end

  def pink
    colorize(35)
  end
end

def output msg
  puts "[#{Time.now.strftime("%x %X").yellow}] #{msg}"
end

def git_sha1
  output "Adding git SHA1 to project".red
  sha1 = system "env -i git rev-parse --short HEAD"
  phpfile = "config/gitsha1.inc.php"
  system "echo '<?php return \"#{sha1}\";' > #{phpfile}"
end

input = STDIN.read.split(' ')
branch = input[2].split('/').last.to_sym if input[2]

return unless [:staging, :master].include?(branch)

Dir.chdir(HOOK_WORK_TREE[branch]) do
  case(branch)
  when :staging
    output "Reset staging to master branch".red
    system "env -i git fetch local"
    system "env -i git reset --hard local/master"
    output "Pull last staging commit".red
    system "env -i git pull local staging"
    output "Install Composer packages".red
    system "#{COMPOSER_EXEC} install --no-dev"
    output "Apply migrations".red
    system "#{RUCKUS_VENDOR_EXEC} db:migrate ENV=staging"
    output "Done! üç∫".green
  when :mobile
    output "Enter maintenance mode".pink
    system "#{ARTISAN_EXEC} down"
    output "Reset 7 to mobile branch".red
    system "env -i git fetch local"
    system "env -i git reset --hard local/mobile"
    output "Pull mobile".red
    system "env -i git pull local mobile"
    output "Install composer packages".red
    system "#{COMPOSER_EXEC} install --no-dev"
    output "Apply migrations".red
    system "#{ARTISAN_EXEC} migrate"
    output "End maintenance mode".pink
    system "#{ARTISAN_EXEC} up"
    output "Done! üç∫".green
  when :master
    output "Enter maintenance mode".pink
    system "touch _MAINTENANCE_MODE_ACTIVE"
    output "Pull master".red
    system "env -i git pull local master"
    output "Install Composer packages".red
    system "#{COMPOSER_EXEC} install --no-dev"
    output "Apply migrations".red
    system "#{RUCKUS_VENDOR_EXEC} db:migrate ENV=production"
    git_sha1
    output "Done! üç∫".green
    output "End maintenance mode".pink
    system "rm _MAINTENANCE_MODE_ACTIVE"
  end
end
